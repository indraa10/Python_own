'''
With n=3 integers in our array, we have three possible pairs:(3,-7),(3,0),(-7,0) and 
. The absolute values of the differences between these pairs are as follows:
|3- -7|==>10
|3-0|==>3
|-7-0|==>7
answer is 3
Notice that if we were to switch the order of the numbers in these pairs, 
the resulting absolute values would still be the same. The smallest of these possible absolute differences is .
'''
#!/bin/python3

import math
import os
import random
import re
import sys

# Complete the minimumAbsoluteDifference function below.
def minimumAbsoluteDifference(arr):
    value=[] 
    #declear an empty array to store the absolute difference between each pair of element
    for i in range(len(arr)-1): 
    # travers the element from arr[0] to arr[n-1]
        for j in range(1,len(arr)): 
        # travers the element from arr[1] to arr[n] , as you dont want to substract one element to same element
            if i!=j: 
            #condition to avoid same element substraction
                value.append(abs(arr[i]-arr[j])) 
                # considering the exact value and store all the possible difference to the array
                #print(value,i,j,sep=':') 
                # debug purpose 
    value1=sorted(value) 
    # sorting the array in increasing order 
    return value1[0] 
    # obviously 1st element will be least one

arr1=[]
n=int(input("Enter number of element: "))
for i in range(n):
    arr1.append(int(input("enter the element: ")))
print(arr1)
diff=minimumAbsoluteDifference(arr1)
print(diff)
