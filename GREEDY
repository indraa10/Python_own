'''
####ref : https://www.hackerrank.com/challenges/minimum-absolute-difference-in-an-array/problem
With n=3 integers in our array, we have three possible pairs:(3,-7),(3,0),(-7,0) and 
. The absolute values of the differences between these pairs are as follows:
|3- -7|==>10
|3-0|==>3
|-7-0|==>7
answer is 3
Notice that if we were to switch the order of the numbers in these pairs, 
the resulting absolute values would still be the same. The smallest of these possible absolute differences is .
'''
#!/bin/python3

import math
import os
import random
import re
import sys

def minimumAbsoluteDifference(arr):
    diff=[] # empty list to contain the absolute difference between adjacent element after sort
    sorted_arr=sorted(arr) # sort the raw list 
    for i in range(len(sorted_arr)-1):
        diff.append(abs(sorted_arr[i]-sorted_arr[i+1])) # absolute difference between adjacent elements
    diff_sorted=sorted(diff) # sorted the difference 
    return diff_sorted[0] # obviously 1st element would be the minimum one
    
  
arr1=[]
n=int(input("Enter number of element: "))
for i in range(n):
    arr1.append(int(input("enter the element: ")))
print(arr1)
diff=minimumAbsoluteDifference(arr1)
print(diff)
